
# coding: utf-8

# In[11]:

get_ipython().run_cell_magic(u'HTML', u'', u'\n<div style="width: 100%; overflow: hidden;">\n            <div id=\'jxgbox1\' class=\'jxgbox\' style=\'width:350px; height:300px; float:left; border: solid #1f628d 2px;\'></div>        \n            <div id=\'jxgbox2\' class=\'jxgbox\' style=\'width:350px; height:300px; margin-left: 375px; border: solid #1f628d 2px;\'></div>\n        </div>\n\n        <!-- TURNED OFF\n        <input class="btn" type="button" value="Shift in Aggregate Demand" onClick="startAnimation()">\n        <input class="btn" type="button" value="Reset" onClick="resetAnimation()">\n        -->\n        \n        \n        <!-- COMMENT: Where our Javascript begins. -->\n        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jsxgraph/0.98/jsxgraphcore.js"></script>\n        \n        <!-- COMMENT: Specific Davidson Next calls built on JSXGraph. Must be loaded after JSXgraph. -->\n        <script type="text/javascript" src="../../../JS/Macro_JSXgraph.js"></script>\n        \n        <script type=\'text/javascript\'>\n            \n            \n            ////////////\n            // BOARD 1\n            ////////////\n            bboxlimits = [-1.5, 12, 12, -1];\n            var brd1 = JXG.JSXGraph.initBoard(\'jxgbox1\', {axis:false, \n                                                    showCopyright: false,\n                                                    showNavigation: false,\n                                                    zoom: false,\n                                                    pan: false,\n                                                    boundingbox:bboxlimits,\n                                                    grid: false,\n                                                    hasMouseUp: true, \n            });\n            \n            xaxis1 = brd1.create(\'axis\', [[0, 0], [11, 0]], {withLabel: false});\n            yaxis1 = brd1.create(\'axis\', [[0, 0], [0, 11]], {withLabel: false});\n\n            //Axes\n            xaxis1.removeAllTicks();\n            yaxis1.removeAllTicks();\n            var xlabel1 = brd1.create(\'text\',[-1.2,10,"PL"],{fixed:true});\n            var ylabel1 = brd1.create(\'text\',[9,-0.5,"RGDP"],{fixed:true});\n            \n            \n            ////////////\n            // BOARD 2\n            ////////////\n            bboxlimits2 = [-2.0, 12, 12, -1];\n            var brd2 = JXG.JSXGraph.initBoard(\'jxgbox2\', {axis:false, \n                                                    showCopyright: false,\n                                                    showNavigation: false,\n                                                    zoom: false,\n                                                    pan: false,\n                                                    boundingbox:bboxlimits2,\n                                                    grid: false,\n                                                    hasMouseUp: true, \n            });\n            \n            xaxis2 = brd2.create(\'axis\', [[0, 0], [11, 0]], {withLabel: false});\n            yaxis2 = brd2.create(\'axis\', [[0, 0], [0, 11]], {withLabel: false});\n            \n            //Axes\n            xaxis2.removeAllTicks();\n            yaxis2.removeAllTicks();\n            var ylabel2 = brd2.create(\'text\',[-1.8,10,"Inflation<br>Rate"],{fixed:true});\n            var xlabel2 = brd2.create(\'text\',[9,-0.5,"UR"],{fixed:true});\n            \n            //////////\n            // Connect Boards and Movement\n            //////////\n            brd1.addChild(brd2);\n            \n            //Points\n            var pointB1a = brd1.create(\'point\',[5,5])\n            var pointB1b = brd1.create(\'point\',[6,6])\n            var pointB2a = brd2.create(\'point\',[5,5])\n            \n            //Transform for shifting SRPC2\n            var shift = brd1.create(\'transform\', [function(){return pointB1a.X()},\n                                                  function(){return pointB1a.Y()}], {type:\'translate\'});\n        \n            shift.bindTo(pointB1b);\n            shift.bindTo(pointB2a);\n        \n            \n        \n            \n            \n            \n            \n        </script>\n    </body>\n</html>')


# In[ ]:



